{"ast":null,"code":"var _jsxFileName = \"C:\\\\Codes\\\\heal-track\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport usersData from '../data/users.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = createContext(null);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const login = async (email, password) => {\n    const foundUser = usersData.users.find(u => u.email === email && u.password === password);\n    if (!foundUser) {\n      throw new Error('Invalid credentials');\n    }\n    setUser(foundUser);\n  };\n  const signup = async newUser => {\n    const userExists = usersData.users.some(u => u.email === newUser.email);\n    if (userExists) {\n      throw new Error('User already exists');\n    }\n    const user = Object.assign({}, newUser, {\n      id: `${newUser.role[0]}${usersData.users.length + 1}`\n    });\n    usersData.users.push(user);\n    setUser(user);\n  };\n  const logout = () => {\n    setUser(null);\n  };\n  return _jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      signup,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","usersData","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","login","email","password","foundUser","users","find","u","signup","newUser","userExists","some","Object","assign","id","role","length","push","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Codes/heal-track/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport type { User, AuthContextType } from '../types';\nimport usersData from '../data/users.json';\n\nconst AuthContext = createContext<AuthContextType | null>(null);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const login = async (email: string, password: string) => {\n    const foundUser = usersData.users.find(\n      (u) => u.email === email && u.password === password\n    );\n    \n    if (!foundUser) {\n      throw new Error('Invalid credentials');\n    }\n    \n    setUser(foundUser);\n  };\n\n  const signup = async (newUser: Omit<User, 'id'>) => {\n    const userExists = usersData.users.some((u) => u.email === newUser.email);\n    \n    if (userExists) {\n      throw new Error('User already exists');\n    }\n    \n    const user = {\n      ...newUser,\n      id: `${newUser.role[0]}${usersData.users.length + 1}`,\n    };\n    \n    usersData.users.push(user);\n    setUser(user);\n  };\n\n  const logout = () => {\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, signup, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAElE,OAAOC,SAAS,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,WAAW,GAAGN,aAAa,CAAyB,IAAI,CAAC;AAE/D,OAAO,MAAMO,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGR,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACrF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAc,IAAI,CAAC;EAEnD,MAAMc,KAAK,GAAG,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,KAAK;IACvD,MAAMC,SAAS,GAAGhB,SAAS,CAACiB,KAAK,CAACC,IAAI,CACnCC,CAAC,IAAKA,CAAC,CAACL,KAAK,KAAKA,KAAK,IAAIK,CAAC,CAACJ,QAAQ,KAAKA,QAC7C,CAAC;IAED,IAAI,CAACC,SAAS,EAAE;MACd,MAAM,IAAIT,KAAK,CAAC,qBAAqB,CAAC;IACxC;IAEAK,OAAO,CAACI,SAAS,CAAC;EACpB,CAAC;EAED,MAAMI,MAAM,GAAG,MAAOC,OAAyB,IAAK;IAClD,MAAMC,UAAU,GAAGtB,SAAS,CAACiB,KAAK,CAACM,IAAI,CAAEJ,CAAC,IAAKA,CAAC,CAACL,KAAK,KAAKO,OAAO,CAACP,KAAK,CAAC;IAEzE,IAAIQ,UAAU,EAAE;MACd,MAAM,IAAIf,KAAK,CAAC,qBAAqB,CAAC;IACxC;IAEA,MAAMI,IAAI,GAAAa,MAAA,CAAAC,MAAA,KACLJ,OAAO;MACVK,EAAE,EAAE,GAAGL,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC,GAAG3B,SAAS,CAACiB,KAAK,CAACW,MAAM,GAAG,CAAC;IAAE,EACtD;IAED5B,SAAS,CAACiB,KAAK,CAACY,IAAI,CAAClB,IAAI,CAAC;IAC1BC,OAAO,CAACD,IAAI,CAAC;EACf,CAAC;EAED,MAAMmB,MAAM,GAAGA,CAAA,KAAM;IACnBlB,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,OACEV,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MAAErB,IAAI;MAAEE,KAAK;MAAEO,MAAM;MAAEU;IAAO,CAAE;IAAArB,QAAA,EAC1DA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC1B,GAAA,CAxCWF,YAAqD;AAAA6B,EAAA,GAArD7B,YAAqD;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}